{"version":3,"file":"react-rbac.js","sources":["../src/context.ts","../src/rbac.tsx","../src/constants/Action.ts","../src/constants/PermissionType.ts","../src/constants/ResourceType.ts","../src/constants/errors/constants.ts","../src/constants/errors/error.ts","../src/constants/errors/ErrContextMisuse.ts","../src/constants/errors/ErrInvalidPermission.ts","../src/constants/errors/ErrInvalidAction.ts","../src/constants/errors/ErrInvalidResource.ts","../src/utils/parsePermission.ts","../src/hooks/usePermissions.ts","../src/utils/parseResource.ts","../src/utils/canAccess.ts","../src/hooks/useRBAC.ts","../src/hooks/useRBACContext.ts","../src/components/WithPermission.tsx"],"sourcesContent":["import { createContext } from \"react\";\nimport { Permission, PermissionString } from \"./constants\";\n\nexport interface RBACContextValue {\n  loadingPermissions: boolean;\n  permissions: Permission[] | null;\n  permissionError: Error | null;\n  setPermissions: (permissions: Permission[]) => void;\n  clearPermissions: () => void;\n  canAccess: (permission: Permission | string) => boolean;\n}\n\n/**\n * RBACContext\n *\n * @version 1.0.0\n *\n * @since 1.0.0\n *\n * @author Abhisek Pattnaik\n *\n * @example\n * ```tsx\n * <RBACContext.Provider>{children}</RBACContext.Provider>\n * ```\n *\n * @description Stores the state of the RBAC\n *\n * @protected\n **/\nexport const RBACContext = createContext<RBACContextValue | null>(null);\n","import React, { FunctionComponent, ReactNode } from \"react\";\nimport { RBACContext, RBACContextValue } from \"./context\";\n\nexport interface RBACProviderProps {\n  children?: ReactNode;\n  rbac: RBACContextValue;\n}\n\n/**\n * RBACProvider\n *\n * @author Abhisek Pattnaik\n *\n * @example\n * ```tsx\n * const app: FunctionComponent<{ children: ReactNode }> = ({ children }) => {\n *     const rbac = useRBAC();\n *     return <RBACProvider value={rbac}>{children}</RBACProvider>\n * }\n * ```\n *\n * @param {ReactNode} children\n *\n * @param {RBACContextValue} props - value from useRBAC()\n */\nexport const RBACProvider: FunctionComponent<RBACProviderProps> = ({\n  children,\n  rbac,\n}) => {\n  return <RBACContext.Provider value={rbac}>{children}</RBACContext.Provider>;\n};\n","export const Action = {\n  CREATE: \"post\",\n  READ: \"get\",\n  LIST: \"get.all\",\n  PATCH: \"update\",\n  UPDATE: \"update.all\",\n  DELETE: \"delete\",\n  DELETE_ALL: \"delete.all\",\n  RESTORE: \"restore\",\n  RESTORE_ALL: \"restore.all\",\n  ANY: \"*\",\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type Action = typeof Action[keyof typeof Action];\n","export const PermissionType = {\n  ALLOW: \"allow\",\n  DENY: \"deny\",\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type PermissionType =\n  | typeof PermissionType[keyof typeof PermissionType]\n  | string;\n\nexport const PermissionTypeAlias = {\n  \"-\": PermissionType.DENY,\n  \"+\": PermissionType.ALLOW,\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type PermissionTypeAlias =\n  keyof typeof PermissionTypeAlias;\n","export const ResourceType = {\n  MENU: \"menu\",\n  PAGE: \"page\",\n  COMPONENT: \"component\",\n  API: \"api\",\n  ANY: \"*\",\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type ResourceType = typeof ResourceType[keyof typeof ResourceType];\n","import dedent from \"dedent\";\n\n/**\n * Collection of Error messages with the error code\n *\n * @protected\n */\nexport const ErrorMessage = {\n  RBAC_CONTEXT_MISUSE: \"useRBACContext must be used within a RBACProvider\",\n\n  RBAC_INVALID_PERMISSION: (permission: string) => dedent`\n    Invalid permission format for \"${permission}\". \n    Each semicolon separated permission should be in the format:\n        \"+resource(resourceType):action1,action2,action3; -resource(resourceType):action1,action2,action3; ...\"\n    Allowed characters for resource, resourceType and actions are:\n        \\`a-z, A-Z, 0-9, underscore(_), hyphen(-), and period(.)\\`\n    `,\n\n  RBAC_INVALID_ACTION: (action: string) => dedent`\n    Invalid action format for \"${action}\".\n    Action should be in the format:\n      \"get.all\"\n      \"get\"\n      \"create\"\n  `,\n\n  RBAC_INVALID_RESOURCE: (resource: string) => dedent`\n    Invalid resource format for \"${resource}\".\n    Resource should be in the format:\n      \"product.*\"\n      \"product.description\"\n      \"product\"\n  `\n};\n","/**\n * Base class which RBAC errors inherit from.\n *\n * @protected\n */\nexport class RBACError extends Error {\n  constructor(message: string, public code: string, public statusCode: number) {\n    super(message);\n  }\n}\n","import { ErrorMessage } from \"./constants\";\nimport { RBACError } from \"./error\";\n\nexport const ERROR_MISUSE_CONTEXT = new RBACError(\n  ErrorMessage.RBAC_CONTEXT_MISUSE,\n  \"RBAC_CONTEXT_MISUSE\",\n  400\n);\n","import { ErrorMessage } from \"./constants\";\nimport { RBACError } from \"./error\";\n\nexport const ERR_INVALID_PERMISSION = (permission: string) =>\n  new RBACError(\n    ErrorMessage.RBAC_INVALID_PERMISSION(permission),\n    \"RBAC_INVALID_PERMISSION\",\n    400\n  );\n","import { ErrorMessage } from \"./constants\";\nimport { RBACError } from \"./error\";\nimport { Action } from \"../Action\";\n\nexport const ERR_INVALID_ACTION = (action: Action) =>\n  new RBACError(\n    ErrorMessage.RBAC_INVALID_ACTION(action),\n    \"RBAC_INVALID_ACTION\",\n    400\n  );\n","import { ErrorMessage } from \"./constants\";\nimport { RBACError } from \"./error\";\n\nexport const ERR_INVALID_RESOURCE = (resource: string) =>\n  new RBACError(\n    ErrorMessage.RBAC_INVALID_RESOURCE(resource),\n    \"RBAC_INVALID_RESOURCE\",\n    400\n  );\n","import {\n  Permission,\n  errors,\n  PermissionString,\n  PermissionType,\n  PermissionTypeAlias,\n} from \"../constants\";\n\n/**\n * parsePermission\n *\n * @version 1.0.0\n *\n * @since 1.0.0\n *\n * @author Abhisek Pattnaik\n *\n * @param permission\n */\nexport const parsePermission = (permission: PermissionString): Permission[] => {\n  const rePermission =\n    /^(?<type>[+-])?\\s*(?<resource>(([\\w-]+|\\*)(\\.([\\w-]+|\\*))*)(\\s*,?\\s*([\\w-]+|\\*)(\\.([\\w-]+|\\*))*))\\s*(\\(\\s*(?<resourceType>[\\w\\s.-]+|\\*)\\s*\\))?\\s*:\\s*(?<actions>(([\\w-]+|\\*)(\\.([\\w-]+))*)(\\s*,\\s*(([\\w-]+|\\*)(\\.([\\w-]+))*))*)+$\\s*/gimu;\n\n  // Semi-colon separated permissions\n  const permissionParts = permission.split(/\\s*;\\s*/);\n\n  const permissions: Permission[] = permissionParts.map(\n    (permissionString: PermissionString) => {\n      const match = rePermission.exec(permissionString.trim());\n\n      if (!match) {\n        throw errors.ERR_INVALID_PERMISSION(permissionString);\n      }\n\n      const {\n        // @ts-ignore\n        groups: { type, resource, resourceType, actions },\n      } = match;\n\n      return {\n        type:\n          PermissionTypeAlias[type?.trim() as PermissionTypeAlias] ??\n          PermissionType.ALLOW,\n        resource: resource?.trim(),\n        resourceType: resourceType?.trim(),\n        action: actions\n          .split(/\\s*,\\s*/)\n          .map((action: string) => action.trim())\n          .filter(Boolean),\n      };\n    }\n  );\n\n  return permissions;\n};\n","import { useCallback, useEffect, useReducer } from \"react\";\nimport { Permission, PermissionString } from \"../constants\";\nimport { parsePermission } from \"../utils/parsePermission\";\n\ninterface PermissionReducerState {\n  permissions: null | Permission[];\n  permissionError: null | Error;\n  loading: boolean;\n}\n\ntype PermissionReducerAction =\n  | {\n      type: \"loaded\";\n      error?: Error;\n      permissions?: null | Permission[];\n    }\n  | {\n      type: \"loading\";\n    };\n\nconst permissionReducer = (\n  state: PermissionReducerState,\n  action: PermissionReducerAction\n) => {\n  switch (action.type) {\n    case \"loading\":\n      return {\n        ...state,\n        permissionError: null,\n        loading: true,\n      };\n    case \"loaded\":\n      const permissions = action.permissions ?? state.permissions;\n      return {\n        ...state,\n        permissions,\n        permissionError: action.error ?? null,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport interface UsePermissionsOptions {\n  defaultPermissions: null | Permission[] | PermissionString;\n  getPermissions?: () => Promise<Permission[] | PermissionString>;\n}\n\nexport const usePermissions = ({\n  getPermissions,\n  defaultPermissions,\n}: UsePermissionsOptions) => {\n  const permissions =\n    typeof defaultPermissions === \"string\"\n      ? parsePermission(defaultPermissions)\n      : defaultPermissions;\n  const [state, dispatch] = useReducer(permissionReducer, {\n    permissions,\n    permissionError: null,\n    loading: false,\n  });\n\n  if (getPermissions) {\n    dispatch({ type: \"loading\" });\n    getPermissions()\n      .then((permissions) => {\n        dispatch({\n          type: \"loaded\",\n          permissions: Array.isArray(permissions)\n            ? permissions\n            : parsePermission(permissions),\n        });\n      })\n      .catch((err) => {\n        dispatch({ type: \"loaded\", error: err });\n      });\n  }\n\n  const clearPermissions = useCallback(() => {\n    dispatch({ type: \"loaded\", permissions: null });\n  }, []);\n\n  const setPermissions = useCallback((permissions: Permission[]) => {\n    dispatch({ type: \"loaded\", permissions });\n  }, []);\n\n  return {\n    loading: state.loading,\n    permissions: state.permissions,\n    permissionError: state.permissionError,\n    setPermissions,\n    clearPermissions,\n  };\n};\n","import { errors } from \"../constants\";\n\nexport const parseResource = (resource: string): string[] => {\n  const reResource = /^([\\w-]+|\\*)(\\.([\\w-]+|\\*))*$/gimu;\n\n  const match = reResource.exec(resource);\n\n  if (!match) {\n    throw errors.ERR_INVALID_RESOURCE(resource);\n  }\n\n  return match;\n};\n","import {\n  Action,\n  Permission,\n  PermissionString,\n  PermissionType,\n} from \"../constants\";\nimport { curryN } from \"lodash/fp\";\nimport { parsePermission } from \"./parsePermission\";\nimport { parseResource } from \"./parseResource\";\n\n/**\n * canAccess\n *\n * @description Iterate through all the permissions and check if the permission is allowed or not.\n *\n * @version 1.0.0\n *\n * @since 1.0.0\n *\n * @author Abhisek Pattnaik\n *\n * @param {Permission[]} permissions - List of all permissions.\n *\n * @param {Permission} permission - The permission to check against.\n * If [`PermissionString`](PermissionString) is passed, it will be parsed and only the first permission will be considered.\n *\n * @returns {boolean} Whether the permission is allowed or not.\n */\nexport const canAccess = curryN(\n  2,\n  (\n    permissions: PermissionString | Permission[],\n    permission: PermissionString | Permission\n  ): boolean => {\n    // Parse permission (normalize to Permission[])\n    const permissionList = Array.isArray(permissions)\n      ? permissions\n      : parsePermission(permissions);\n\n    // Parse my permission (normalize to string)\n    const myPermission =\n      typeof permission == \"string\"\n        ? parsePermission(permission)[0]\n        : permission;\n\n    // Iterate through all the permissions and check if the permission is allowed.\n    return permissionList.every((p) => {\n      if (!p.type) {\n        p.type = PermissionType.ALLOW;\n      }\n\n      // Normalize `resource`\n      // @ts-ignore\n      const resources = [].concat(p.resource);\n      // @ts-ignore\n      const myResources = [].concat(myPermission.resource);\n\n      // Parse Resource(s)\n      const resourceParts = resources.map(parseResource);\n      const myResourceParts = myResources.map(parseResource);\n\n      const resource = resourceParts[0];\n      const myResource = myResourceParts[0];\n\n      // FIXME\n      // Check if my resource is in the resource list\n      // And if my resource part is contained by the original resource part\n      /*myResourceParts.every((myResourcePart) => {\n        return resourceParts.some((resourcePart) => {\n          return resourcePart.every((part, index) => {\n            return part === \"*\" || part === myResourcePart[index];\n          });\n        });\n      });*/\n\n      if (p.resourceType && p.resourceType !== myPermission.resourceType) {\n        return true;\n      }\n\n      // FIXME\n      return (\n        []\n          // @ts-ignore\n          .concat(p.action)\n          .some((action) => myPermission.action.includes(action)) &&\n        p.type === PermissionType.ALLOW\n      );\n    });\n  }\n);\n\n/**\n *\n * @param {Permission} permission - The permission to check against.\n * If [`PermissionString`](PermissionString) is passed, it will be parsed and only the first permission will be considered.\n *\n * @returns {boolean} Whether the permission is allowed or not.\n */\ntype canAccess2ReturnFn = (\n  permission: PermissionString | Permission\n) => boolean;\n\n/**\n * canAccess2\n *\n * @description Iterate through all the permissions and check if the permission is allowed or not.\n *\n * @todo Support for multiple resources.\n *\n * @todo Support for DENY permissions\n *\n * @todo Support for resource wildcards.\n *\n * @version 1.0.0\n *\n * @since 1.0.0\n *\n * @author Abhisek Pattnaik\n *\n * @param {Permission[]} permissions - List of all permissions.\n */\nexport const canAccess2 = (\n  permissions: PermissionString | Permission[] | null\n): canAccess2ReturnFn => {\n  if (permissions == null) {\n    return (any) => false;\n  }\n\n  // Parse permission (normalize to Permission[])\n  const permissionList = Array.isArray(permissions)\n    ? permissions\n    : parsePermission(permissions);\n\n  const permissionMap = permissionList.reduce((acc, p) => {\n    // @ts-ignore\n    const resource = [].concat(p.resource)[0];\n    // @ts-ignore\n    const actions = [].concat(p.action);\n\n    const type = p.type ?? PermissionType.ALLOW;\n\n    const actionsWithPermissionType = actions.map((action) =>\n      type === PermissionType.ALLOW ? `+${action}` : `-${action}`\n    );\n\n    const resourceWithType = p.resourceType\n      ? `${resource}(${p.resourceType})`\n      : resource;\n\n    acc[resourceWithType] = acc[resourceWithType]\n      ? Array.from(\n          new Set([...acc[resourceWithType], ...actionsWithPermissionType])\n        )\n      : Array.from(new Set(actionsWithPermissionType));\n\n    return acc;\n  }, {} as { [key: string]: string[] });\n\n  return (permission: PermissionString | Permission) => {\n    // Parse my permission (normalize to string)\n    const myPermission =\n      typeof permission == \"string\"\n        ? parsePermission(permission)[0]\n        : permission;\n\n    // @ts-ignore\n    const myResource = [].concat(myPermission.resource)[0];\n\n    const myType = myPermission.type ?? PermissionType.ALLOW;\n\n    const myActions = []\n      // @ts-ignore\n      .concat(myPermission.action)\n      .map((action) =>\n        myType === PermissionType.ALLOW ? `+${action}` : `-${action}`\n      );\n\n    const resourceWithType = myPermission.resourceType\n      ? `${myResource}(${myPermission.resourceType})`\n      : myResource;\n\n    const actionsWithResourceType = permissionMap[resourceWithType];\n    const actions = permissionMap[myResource];\n\n    return (\n      myActions.every(\n        (myAction) =>\n          actionsWithResourceType?.includes?.(myAction) ||\n          actionsWithResourceType?.includes?.(`+${Action.ANY}`)\n      ) ||\n      myActions.every(\n        (myAction) =>\n          actions?.includes?.(myAction) || actions?.includes?.(`+${Action.ANY}`)\n      )\n    );\n  };\n};\n","import { useCallback } from \"react\";\nimport { RBACContextValue } from \"../context\";\nimport { Permission } from \"../constants\";\nimport { usePermissions } from \"./usePermissions\";\nimport {canAccess2} from \"../utils/canAccess\";\n\nexport interface RBACOptions {\n  permissions?: Permission[] | null;\n  getPermissions?: () => Promise<Permission[]>;\n}\n\n/**\n * useRBAC\n *\n * @description Pass the return value of this hook to the RBACProvider `value` prop.\n *\n * @version 1.0.0\n *\n * @since 1.0.0\n *\n * @author Abhisek Pattnaik\n *\n * @example\n * ```tsx\n * const app: FunctionComponent<{ children: ReactNode }> = ({ children }) => {\n *     const rbac = useRBAC();\n *     return <RBACProvider value={rbac}>{children}</RBACProvider>\n * }\n * ```\n *\n * @param {RBACOptions} rbac - Options for RBAC\n *\n * @param {Permission[]} rbac.permissions - RBAC permissions\n *\n * @returns {RBACContextValue} Value to be passed to RBACProvider `value` prop.\n */\nexport const useRBAC = ({\n  permissions: defaultPermissions = null,\n  getPermissions,\n}: RBACOptions = {}): RBACContextValue => {\n  const {\n    setPermissions,\n    clearPermissions,\n    permissions,\n    loading: loadingPermissions,\n    permissionError,\n  } = usePermissions({ defaultPermissions, getPermissions });\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const canAccess = useCallback(canAccess2(permissions), [permissions]);\n\n  return {\n    loadingPermissions,\n    permissions,\n    permissionError,\n    setPermissions,\n    clearPermissions,\n    canAccess,\n  };\n};\n","import { Permission, errors } from \"../constants\";\nimport { useContext } from \"react\";\nimport { RBACContext } from \"../context\";\n\n/**\n * useRBACContext\n *\n * @author Abhisek Pattnaik\n *\n * @version 1.0.0\n *\n * @since 1.0.0\n *\n * @example\n * ```tsx\n * const component: FunctionComponent = () => {\n *     const { permissions } = useRBACContext(defaultPermissions | undefined);\n *     return <div>{permissions}</div>\n * }\n * ```\n *\n * @example\n * ```tsx\n * const component: FunctionComponent = () => {\n *     const { setPermissions } = useRBACContext();\n *     setPermissions(Permission[])\n *     return <div />\n * }\n * ```\n *\n * @param {Permission[]} [defaultPermissions=null] - Default permissions\n */\nexport const useRBACContext = (\n  defaultPermissions: Permission[] | null = null\n) => {\n  const rbac = useContext(RBACContext);\n\n  if (!rbac) {\n    throw errors.ERROR_MISUSE_CONTEXT;\n  }\n\n  return rbac;\n};\n","import React, { FunctionComponent, ReactNode } from \"react\";\nimport { Permission } from \"../constants\";\nimport { useRBACContext } from \"../hooks\";\n\nexport type WithPermissionProps = {\n  children: ReactNode;\n} & Permission;\n\nexport const WithPermission: FunctionComponent<WithPermissionProps> = ({\n  children,\n  ...permissionProps\n}) => {\n  const { canAccess } = useRBACContext();\n\n  if (canAccess(permissionProps)) {\n    return <>{children}</>;\n  }\n\n  return null;\n};\n"],"names":["createContext","React","dedent","errors.ERR_INVALID_PERMISSION","useReducer","useCallback","errors.ERR_INVALID_RESOURCE","curryN","useContext","errors.ERROR_MISUSE_CONTEXT"],"mappings":"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"}